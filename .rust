
alias stable='rustup default stable'
alias stableinstall='rustup install stable'
alias nightly='rustup default nightly'
alias nightlyinstall='rustup install nightly'

alias rbin='cd ~/mia/rust/bin'
alias rustbin='cd ~/mia/rust/bin'

alias rback='RUST_BACKTRACE=1'
alias rbackfull='RUST_BACKTRACE=full'

### Find target directories

alias rfme='fd -I -t=d'
alias rftt='find . -name target'
alias rft='fd -I -t=d target$'

alias rf='rustfmt'

### cargo commands ok

alias ca='cargo'
alias cben='cargo bench'
alias cbench='cargo bench'

alias cb='cargo build'
alias cba='cargo build --workspace'

alias cbd='cargo build --features=dataframe'
alias cbdf='cargo build --features=dataframe'
alias cbex='cargo build --features=extra'
alias cbdfex='cargo build --features="dataframe extra"'
alias crdf='cargo run --features=dataframe'

alias cbdb='cargo build --features=database'
alias cbsql='cargo build --features=database'

alias cdoc='cargo doc --no-deps --open'
alias cor='cargo outdated -R'

### cargo expand

alias ce='cargo expand'
alias cee='ce --example'
alias ce0='cee ex00'
alias ce1='cee ex01'
alias ce2='cee ex02'

### cargo run

alias cr='cargo run'
alias crb='cargo run --bin'
alias cre='cargo run --example'
alias crr='cargo run --release'

alias cref='cargo run --features="runtime unstable-stream" --example'
alias crec='cargo run --example connect 127.0.0.1:8080'

alias ciman='cargo fmt; cargo check; cargo clippy; cargo test --workspace --all-features'
alias ccfcc='cargo fmt; cargo check; cargo clippy'
alias ccl='cargo clippy'
alias clip='cargo clippy'
alias cch='cargo check'
alias check='cargo check'
alias cf='cargo fmt'
alias cn='cargo new'

alias cup='cargo update'
alias cv='cargo -V'

### insta
alias cir='cargo insta review'

### rustup
alias rustdoc='rustup doc'
alias rustdoch='rustup doc -h'
alias docrust='rustup doc'

### rust-bio
alias rb='cd ~/j/tmp18/rust-bio'
alias scr='cd ~/j/tmp17/scraper'

### rsq
alias rsq='cd ~/j/tmp17/rsq'
alias rsql='cd ~/j/tmp17/rusqlite'
alias sql='sqlite3'

### parse-camino + dataset

alias ds='cd ~/j/tmp17/dataset/csv'
alias pcamino='cd ~/j/tmp17/parse-camino'
alias pcd='cd ~/j/tmp17/parse-camino-data'

### shakespeare
alias shake='cd ~/j/tmp17/nuproj/shakespeare'

alias fea='cd ~/j/tmp03/features'

### nushell
alias eq='cd ~/j/tmp17/nushell'

### tree sitter
#alias tsg='cd ~/j/tmp07/tree-sitter'
alias tstop='cd ~/j/tmp07/tree-sitter'
alias ts='tree-sitter'
alias tsg='ts generate'
alias tsgen='ts generate'
alias tsgenerate='ts generate'
alias tst='ts test'
alias tstest='ts test'

alias tsbash='cd ~/j/tmp07/tree-sitter-bash'
alias tscss='cd ~/j/tmp07/tree-sitter-css'
alias tsex='cd ~/j/tmp07/tree-sitter-examples'
alias tshb='cd ~/j/tmp07/tree-sitter-hb'
alias tsj='cd ~/j/tmp07/tree-sitter-javascript'
alias tsjson='cd ~/j/tmp07/tree-sitter-json'
alias tsmath='cd ~/j/tmp07/tree-sitter-math'
alias tsm='cd ~/j/tmp07/tree-sitter-me'
alias tsn='cd ~/j/tmp07/tree-sitter-nu'
alias tsnu='cd ~/j/tmp07/tree-sitter-nu'
alias tsp='cd ~/j/tmp07/tree-sitter-python'

alias gptsr='git pull https://github.com/tree-sitter/tree-sitter-rust master'
alias tsr='cd ~/j/tmp07/tree-sitter-rust'

alias tstoml='cd ~/j/tmp07/tree-sitter-toml'
alias tsyaml='cd ~/j/tmp07/tree-sitter-yaml'

### pest
alias gram='cd ~/j/tmp07/grammar'
alias pest='cd ~/j/tmp07/pest'
alias pestb='cd ~/j/tmp07/pest_book'
alias pestbook='cd ~/j/tmp07/pest_book'

### reedline
alias rl='cd ~/j/tmp17/reedline'
alias rlg='~/j/tmp17/reedline/target/debug/reedline'
alias rlrun='~/j/tmp17/reedline/target/debug/reedline'
alias rls='cd ~/j/tmp17/reedline/src'
export REEDLINE_HISTFILE="$HOME/.reedline/history.txt"

alias fix='rg "FIXME: jt"'
alias fixme='rg "FIXME: jt"'
alias rgfdf='rg "feature = \"dataframe\""'

alias mi='cd ~/j/tmp17/miette'
alias req='./target/debug/engine-q'
alias runeq='./target/debug/engine-q'
alias eqcfg='cd /Users/ma/Library/Application\ Support/nushell'
alias nudoc='cd ~/j/tmp17/nudoc'
alias nub='cd ~/j/tmp17/nubranch'
alias com='cd ~/j/tmp17/nushell/crates/nu-command'
alias fil='cd ~/j/tmp17/nushell/crates/nu-command/src/filters'

### rust-notes
alias nuno='cd ~/j/tmp17/nunotes'
alias rn='cd ~/j/tmp06/rust-notes'

### nudev
alias nudev='cd ~/j/tmp17/nudev'

### hyper example echo server testing

alias ech='curl localhost:3000/echo -XPOST -d'
alias echm='curl localhost:3000/mia -XPOST -d'
alias echr='curl localhost:3000/echo/reversed -XPOST -d'

### arrow and parquet and polars

alias pc="rm *.parquet"

alias pol="cd ~/j/tmp06/polars/polars"
alias polt="cd ~/j/tmp06/polars"

alias datafust='cd ~/j/tmp06/arrow-datafusion'
alias datafus='cd ~/j/tmp06/arrow-datafusion/datafusion/core/src'
alias datafusion='cd ~/j/tmp06/arrow-datafusion/datafusion/core/src'
alias par="cd ~/j/tmp06/arrow-rs/parquet"
alias par2="cd ~/j/tmp06/parquet2"
alias part="cd ~/j/tmp06/parquet-testing/data"

alias pola="cd ~/j/tmp06/polars01a"
alias polb="cd ~/j/tmp06/polars01b"
alias polc="cd ~/j/tmp06/polars01c"

alias polm="cd ~/j/tmp06/polars01/polars-core"
alias polme="cd ~/j/tmp06/polars01/polars-core"

alias arex1='cre read_csv --features "prettyprint"'
alias arex2='cre read_csv_infer_schema --features "prettyprint"'
alias arex3='cre read_csv_ui --features "prettyprint"'

alias c2p='cd ~/j/tmp06/csv2par'

alias cmakear1='cmake -DCMAKE_BUILD_TYPE=Debug -DARROW_BUILD_TESTS=ON ..'
alias cmakear2='cmake -DCMAKE_BUILD_TYPE=Debug -DARROW_BUILD_TESTS=ON -DARROW_PARQUET=ON ..'

### serde
alias rgs='rg Serialize'
alias se='cd ~/j/tmp06/serde'
alias sex='cd ~/j/tmp06/serde-examples'
alias sexr='cd ~/j/tmp06/serde-examples/ron'
alias sj='cd ~/j/tmp06/serde-json'
alias rmp='cd ~/j/tmp06/msgpack-rust'
alias ron='cd ~/j/tmp06/ron'
alias sm='cd ~/j/tmp06/msgpack-rust/rmp-serde'
alias sy='cd ~/j/tmp06/serde-yaml'

### canop/whalespotter.git
alias ws='whalespotter'

### gyscos/cursive
### go to the examples directory and add the example name
alias cce='cr --features cursive/crossterm-backend --bin'

#
### rust logging
#

alias loge='export RUST_LOG=error'
alias logw='export RUST_LOG=warn'
alias logi='export RUST_LOG=info'
alias logd='export RUST_LOG=debug'
alias logt='export RUST_LOG=trace'
alias loglevel='env | grep RUST_LOG'

#
### nushell
#

### Releases
alias r84='cd ~/j/tmp18/release-84/nushell'

### miette
alias miup='cargo update --workspace -p miette'

alias gcnu='gc git@github.com:nushell/nushell.git'
alias getnu='gc git@github.com:nushell/nushell.git'
alias getnustorm='gc git@github.com:stormasm/nushell.git'

alias getnustormbook='gc git@github.com:stormasm/nushell.github.io.git'

alias getnusn='gc git@github.com:stormasm/nu_scripts.git'
alias getnusnstorm='gc git@github.com:stormasm/nu_scripts.git'
alias getrlstorm='gc git@github.com:stormasm/reedline.git'

alias gpbook='git pull https://github.com/nushell/nushell.github.io main'
alias gpeq='git pull https://github.com/nushell/nushell main'
alias gpor='git pull https://github.com/datafuselabs/openraft main'
alias gpnu='git pull https://github.com/nushell/nushell main'
alias gpnus='git pull https://github.com/nushell/nu_scripts main'
alias gpnusn='git pull https://github.com/nushell/nu_scripts main'
alias gprl='git pull https://github.com/nushell/reedline main'
alias gpar2='git pull https://github.com/jntrnr/nu_parser2 main'
alias gppar='git pull https://github.com/jntrnr/nu_parser2 main'
alias gpnp='git pull https://github.com/jntrnr/nu_parser2 main'
alias gpgram='git pull https://github.com/nushell/grammar main'
alias gpts='git pull https://github.com/fdncred/tree-sitter-nu main'
alias gptsn='git pull https://github.com/fdncred/tree-sitter-nu main'

###                                           ###
#    nushell config location and manipulation   #
###                                           ###

alias appsup='cd /Users/ma/Library/Application\ Support'

alias configpath='cd /Users/ma/Library/Application\ Support/nushell'
alias configpathold='cd /Users/ma/Library/Application\ Support/org.nushell.nu'
alias nuconfigold='cd /Users/ma/Library/Application\ Support/org.nushell.nu'

alias confignu='cd /Users/ma/Library/Application\ Support/nushell'
alias nuconfig='cd /Users/ma/Library/Application\ Support/nushell'
alias nuconfigme='nutop; cd ..; cd nuconfig'

alias slconfig='cd /Users/ma/Library/Application\ Support/io.spaceandtime.schnapslatte'

#
# nutop is the latest nushell and engine-q code snapshot
#

alias nudir='cd ~/j/tmp17'

alias nutop='cd ~/j/tmp17/nushell'
alias nutopp='cd ~/j/tmp26/nushell'

alias nucore='cd ~/j/tmp17/nushell-core'

alias nubo='cd ~/j/tmp11/nushell.github.io'
alias nubook='cd ~/j/tmp26/nushell.github.io'
alias nubookme='cd ~/j/tmp17/nushell.github.io'
alias nubookrun='npm install; npm run dev'

alias nut='cd ~/j/tmp17/nutmp'
alias nutmp='cd ~/j/tmp17/nutmp'

alias nurun='~/j/tmp17/nushell/target/debug/nu'
alias nurunyes='~/j/tmp17/nushell/target/debug/nu'

alias nuruno='~/j/tmp17/nushell/target/debug/nu --no-std-lib'
alias nurunno='~/j/tmp17/nushell/target/debug/nu --no-std-lib'
alias nun='nurun -n --no-std-lib'

alias nur='./target/debug/nu'
alias nurunn='./target/debug/nu'

alias nuruno='./target/debug/nu --config ~/config.nu --env-config ~/env.nu'
alias nurunoconfig='./target/debug/nu --config ~/config.nu --env-config ~/env.nu'

alias nu44='~/mia/nu44/nu'
alias nu59='~/mia/nu59/nu'
alias nu61='~/mia/nu61/nu'

alias nulegrun='nutopp; ./target/debug/nu --skip-plugins'
alias nulegruns='cd ~/j/tmp26/nutmp/scripts; ~/j/tmp26/nushell/target/debug/nu --skip-plugins'

alias nurunp='nutop; ./target/debug/nu'
alias nuruni='nurun --log-level info'
alias nurund='nurun --log-level debug'
alias nurunt='nurun --log-level trace'
alias nuruntlog='nurun -l trace 2> log.txt'

alias nurundate='nurunt -c date'
alias nurunls='nurunt -c ls'

### Changing to various nushell crates

alias nuansi='nutop; cd crates/nu-ansi-term/src'
alias nuc='nutop; cd crates'
alias nucr='nutop; cd crates/nu-crate/src'
alias nuco='cd ~/j/tmp17/nucode'
alias nucode='cd ~/j/tmp17/nucode'

alias nucli='nutop; cd crates/nu-cli/src'

alias nucom='nutop; cd crates/nu-command/src'
alias nucomc='nutop; cd crates/nu-command-core/src'
alias nucomex='nutop; cd crates/nu-cmd-extra/src'
alias nucomlang='nutop; cd crates/nu-cmd-lang/src'

alias ncl='cd ~/j/tmp17/nushell/crates/nu-cmd-lang'
alias nulang='nutop; cd crates/nu-cmd-lang/src'
alias nulangt='nutop; cd crates/nu-cmd-lang/tests/commands'

alias nucomft='nutop; cd crates/nu-command/src/formats/to'
alias nudf='nutop; cd crates/nu-cmd-dataframe/src/dataframe'
alias nudft='nutop; cd crates/nu-cmd-dataframe'
alias dfnu='nutop; cd crates/nu-command/src/dataframe'
alias nucomt='nutop; cd crates/nu-command'

alias tff='nutop; cd tests/fixtures/formats'

alias nucomp='nutop; cd crates/nu-completion/src'

alias nudata='nudir; cd nudata'
alias nud='nudir; cd nudata'

alias nuen='nutop; cd crates/nu-engine/src'
alias nueng='nutop; cd crates/nu-engine/src'
alias nuex='nutop; cd crates/nu-cmd-extra/src'
alias nup='nutop; cd crates/nu-parser/src'
alias nupar='nutop; cd crates/nu-parser/src'
alias nupar2='cd ~/j/tmp06/nu_parser2'
alias npr='~/j/tmp06/nu_parser2/target/debug/nu_parser'
alias nupro='nutop; cd crates/nu-protocol/src'
alias nustd='nutop; cd crates/nu-std/src'
alias nuprom='cd ~/j/tmp17/nupro'
alias nuprome='cd ~/j/tmp17/nupro'
alias nudfr='nutop; cd crates/nu-command/src/dataframe'
alias nudfg='nutop; cd crates/nu-command/src/dataframe'
alias nts='nutop; cd crates/nu-test-support/src'
alias nutab='nutop; cd crates/nu-table/src'
alias nutable='nutop; cd crates/nu-table'

alias df4='cd ~/j/tmp16/w/nushell-df4'
alias df4p='cd ~/j/tmp16/w/nushell-df4/crates/nu-polars'
alias df5='cd ~/j/tmp16/ww/nushell-df5'
alias df5p='cd ~/j/tmp16/ww/nushell-df5/crates/nu-polars'

alias nuj='cd ~/j/tmp17/nushell/crates/nu-json/src'
alias nujson='cd ~/j/tmp17/nushell/crates/nu-json/src'

alias nutest='nutop; cd crates/nu-test-support/src'

# Plugins

alias nuplug='nutop; cd crates/nu-plugin/src'
alias nuplugin='nutop; cd crates/nu-plugin/src'
alias npq='nutop; cd crates/nu_plugin_query/src'

# Nushell Testing
#
alias ntalls='cargo test --workspace --features=stable'
alias ntallx='cargo test --workspace --features=extra'
#
#  Testing an individual nushell command
#   Type the command name after typing the alias
#   cargo test --package nu-cli --test main -- commands::<command_name_here>
alias ntcomall='cargo test --package nu-cli --test main -- commands::'
alias ntcom='cargo test --package nu-cli --test main -- '

# Nushell Scripts
alias nubug='nutop; cd ..; cd nubug'
alias nutmps='nutop; cd ..; cd nutmp/scripts'
alias nusc='nutop; cd ..; cd nuscratch'
alias nus='nutop; cd ..; cd nuscripts'
alias nuscript='nutop; cd ..; cd nuscripts'
alias nuscripts='nutop; cd ..; cd nuscripts'
alias nust='nutop; cd ..; cd nutmp/scripts/test'
alias nusn='nutop; cd ..; cd nu_scripts'

# Nushell Projects
alias nume='nutop; cd ..; cd nume'
alias nunotes='nutop; cd ..; cd nunotes'
alias nuproj='nutop; cd ..; cd nuproj'
alias peval='nuproj; cd parseval'

# Nushell directory locations
alias tojson='nutop; cd crates/nu-command/src/formats/to'

# Nushell Binaries
alias nuver='cd /mia/rust/nushell/nuver'

### mdbook

alias mdb='mdbook build'
alias mdc='mdbook clean'
alias mdd='mdbook build -d ./docs'
alias mds='mdbook serve'
alias mdserve='mdbook serve'

#
# gluon
#
alias gli='gluon -i'

#
# zola
#

alias zs='zola serve'
alias zb='zola build'

#
# Rust Examples
#

alias rex='cd ~/j/tmp06/rust-examples'
alias rustex='cd ~/j/tmp06/rust-examples'

alias rexa='rex; cd arrow'
alias rexdf='rex; cd datafusion'
alias rexe='rex; cd error'
alias rexg='rex; cd gluesql'
alias rexn='rex; cd narrow'
alias rexp='rex; cd polars'
alias rexr='rex; cd redis'
alias rexs='rex; cd sqlite'
alias rext='rex; cd tempfile'
alias rexv='rex; cd vec'

#
# Special Case Nushell Testing
# You have to run the cta command first prior to running the tests
#


alias cnrlistall='cargo nextest list --workspace --cargo-profile ci --all-features'
alias cnrlist='cargo nextest list'
alias cnr='cargo nextest run'
alias cnra='cargo nextest run --all --all-features'
alias cnrb='cargo nextest run --all --features extra'
alias cnrn='cargo nextest run --no-capture'
alias cnrno='cargo nextest run --no-capture'

alias ct='cargo test'
alias ctt='ct --test'
alias ctlist='cargo test -- --list'
alias ctno='cargo test -- --nocapture'
alias ctexam='ct test_examples'

alias ctrl='cargo test --features rustyline-support'

alias cth='ct commands::help'
alias cthno='ctno commands::help'

alias ctnoex='ctno commands::tests::examples_work_as_expected'

alias cta='cargo test --workspace --all-features'
alias ctan='cargo test --workspace'
alias ctas='cargo test --workspace --features=stable'
alias ctm='cargo test --test main'
alias ct100='cargo test --package nu-cli --test main -- commands::each'

alias ctdf='ct --workspace --features=dataframe'
alias ctdff='ct --workspace --features=dataframe dataframe::'
alias cndf='cargo nextest run --all --features=dataframe'
alias cndff='cargo nextest run --all --features=dataframe dataframe::'

alias ctex='ct --workspace --features=extra'
alias ctexbits='ct --workspace --features=extra bits::'
alias ctexbytes='ct --workspace --features=extra bytes::'

alias cnex='cargo nextest run --all --features=extra'
alias cnexbits='cargo nextest run --all --features=extra bits::'

#
# Helix
#
alias hxg='cd ~/j/tmp17/helix'

#
# tickrs
#
alias tickui='tickrs -s ui,ibm,nly'

#
# cranelift wasmtime
#

export TARGET=x86_64-apple-darwin

alias cl='cd ~/j/tmp19/cranelift'
alias clg='cd ~/j/tmp19/cl'
alias clu='clif-util'
alias clur='~/j/tmp19/wasmtime/target/debug/clif-util'
alias clurt='clur test'
alias wabt='cd ~/j/tmp19/wabt'
alias wabtt='cd ~/j/tmp19/wabtest'
alias wabtest='cd ~/j/tmp19/wabtest'
alias rr='./test/run-tests.py -p --no-roundtrip'
alias wt=wasmtime
alias wtg='cd ~/j/tmp19/wasmtime'
alias wtc='cd ~/j/tmp19/wasmtime/cranelift'

##
#  Tauri
##
alias tgo='cd ~/j/tmp15/tauri/core'
alias got='cd ~/j/tmp15/tauri/core/tauri/src'
alias gott='cd ~/j/tmp15/tauri'

alias bill='cd ~/j/tmp01/tauri-helloworld/bill'
alias billg='cd ~/j/tmp01/tauri-helloworld/bill/src-tauri/crates/tauri/src'

##
#  Nana
##
alias getnana='gc git@github.com:nushell/nana.git'
alias getnanastorm='gc git@github.com:stormasm/nana.git'
alias nana='cd ~/j/tmp15/nana'
alias psn='ps | rg nana'

##
#  Jakt
##
alias jg='cd ~/j/tmp17/jakt'
alias ja='~/j/tmp17/jakt//target/debug/jakt'
alias jak='jg; ./target/debug/jakt'
alias jakt='jg; ./target/debug/jakt'

##
#  Nom
##
alias nom='cd ~/j/tmp17/nom'
alias rexnom='cd ~/j/tmp17/rust-examples/nom'
alias rexnomex='cd ~/j/tmp17/rust-examples/nom/examples'
alias nomrex='cd ~/j/tmp17/rust-examples/nom'
alias nomrexex='cd ~/j/tmp17/rust-examples/nom/examples'

##
#  Tokio, Tonic
##
alias tonic='cd ~/j/tmp06/tonic'

##
# Sqlx
##
alias sqlxtodo='DATABASE_URL=postgres:///todos sqlx database create'
alias psqltodo='psql postgres:///todos'

##
#  Rust ripgrep (rg)
#
### https://github.com/BurntSushi/ripgrep/issues/193
##
alias rgpaf='rg "pub async fn"'
alias rgpf='rg "pub fn"'
alias rgtrait='rg "pub trait"'
alias rgstruct='rg "pub struct"'
alias rgenum='rg "pub enum"'

#
### rgf pb   // search for all files with the pattern pb in lets say bayard
#            // which both use protocol buffers

alias rgf='rg --files | rg'
alias rgp='rgf "\.parquet"'

alias rgct="rg 'cfg\(test\)'"
alias rgctest="rg 'cfg\(test\)'"
alias rgt="rg '\#\[test\]'"
alias rgtest="rg '\#\[test\]'"
alias rgtoktest="rg '\[tokio::test\]'"
alias mr="rg 'macro_rules! '"
alias rgnu="rg nu\!"

### Find all references to polars in all Cargo.toml files
alias rgc="rg polars -g Cargo.toml"

##
#   exa
##
alias tree="exa -T"

##
#   how to run tests when they live inside an example file
#   the key point here is that you have to put the name of the example file first before tests
##

alias ctflex='cargo test --example flight_sql_server tests --features="cli flight-sql-experimental tls"'

##
#   dply
##
alias dp1="dply -c 'parquet(\"region.parquet\") | show()'"

alias nnp='cd ~/j/tmp17/new-nu-parser'
